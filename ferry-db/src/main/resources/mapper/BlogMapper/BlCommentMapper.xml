<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ferry.server.blog.mapper.BlCommentMapper">
  <resultMap id="BaseResultMap" type="com.ferry.server.blog.entity.BlComment">
    <!--@mbg.generated-->
    <!--@Table bl_comment-->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="to_comment_id" jdbcType="VARCHAR" property="toCommentId" />
    <result column="to_user_id" jdbcType="VARCHAR" property="toUserId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="blog_id" jdbcType="VARCHAR" property="blogId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="TYPE" jdbcType="BOOLEAN" property="type" />
    <result column="first_comment_id" jdbcType="VARCHAR" property="firstCommentId" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdateBy" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, user_id, to_comment_id, to_user_id, content, blog_id, `status`, create_time, 
    update_time, `source`, `TYPE`, first_comment_id, create_by, last_update_by
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update bl_comment
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.userId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="to_comment_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.toCommentId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="to_user_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.toUserId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="content = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.content,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="blog_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.blogId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.status,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`source` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.source,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`TYPE` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.type,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="first_comment_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.firstCommentId,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="create_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.createBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="last_update_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=VARCHAR} then #{item.lastUpdateBy,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=VARCHAR}
    </foreach>
  </update>
    <select id="selectPageNew" resultType="com.ferry.server.blog.entity.BlComment">
      select bl_comment.*,bb.title as blogName, users.nick_name as userName,
      us.nick_name as toUserName
      from bl_comment
      left join bl_blog bb on bl_comment.blog_id = bb.id
      left join sys_user users on bl_comment.user_id = users.id
      left join sys_user us on bl_comment.to_user_id = us.id
      ${ew.customSqlSegment}
    </select>
    <insert id="batchInsert" parameterType="map">
    <!--@mbg.generated-->
    insert into bl_comment
    (id, user_id, to_comment_id, to_user_id, content, blog_id, `status`, create_time, 
      update_time, `source`, `TYPE`, first_comment_id, create_by, last_update_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.userId,jdbcType=VARCHAR}, #{item.toCommentId,jdbcType=VARCHAR}, 
        #{item.toUserId,jdbcType=VARCHAR}, #{item.content,jdbcType=VARCHAR}, #{item.blogId,jdbcType=VARCHAR}, 
        #{item.status,jdbcType=TINYINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.source,jdbcType=VARCHAR}, #{item.type,jdbcType=BOOLEAN}, #{item.firstCommentId,jdbcType=VARCHAR}, 
        #{item.createBy,jdbcType=VARCHAR}, #{item.lastUpdateBy,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" parameterType="com.ferry.server.blog.entity.BlComment">
    <!--@mbg.generated-->
    insert into bl_comment
    (id, user_id, to_comment_id, to_user_id, content, blog_id, `status`, create_time, 
      update_time, `source`, `TYPE`, first_comment_id, create_by, last_update_by)
    values
    (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{toCommentId,jdbcType=VARCHAR}, 
      #{toUserId,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{blogId,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{source,jdbcType=VARCHAR}, #{type,jdbcType=BOOLEAN}, #{firstCommentId,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{lastUpdateBy,jdbcType=VARCHAR})
    on duplicate key update 
    id = #{id,jdbcType=VARCHAR}, 
    user_id = #{userId,jdbcType=VARCHAR}, 
    to_comment_id = #{toCommentId,jdbcType=VARCHAR}, 
    to_user_id = #{toUserId,jdbcType=VARCHAR}, 
    content = #{content,jdbcType=VARCHAR}, 
    blog_id = #{blogId,jdbcType=VARCHAR}, 
    `status` = #{status,jdbcType=TINYINT}, 
    create_time = #{createTime,jdbcType=TIMESTAMP}, 
    update_time = #{updateTime,jdbcType=TIMESTAMP}, 
    `source` = #{source,jdbcType=VARCHAR}, 
    `TYPE` = #{type,jdbcType=BOOLEAN}, 
    first_comment_id = #{firstCommentId,jdbcType=VARCHAR}, 
    create_by = #{createBy,jdbcType=VARCHAR}, 
    last_update_by = #{lastUpdateBy,jdbcType=VARCHAR}
  </insert>
  <insert id="insertOrUpdateSelective" parameterType="com.ferry.server.blog.entity.BlComment">
    <!--@mbg.generated-->
    insert into bl_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="toCommentId != null">
        to_comment_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="blogId != null">
        blog_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="source != null">
        `source`,
      </if>
      <if test="type != null">
        `TYPE`,
      </if>
      <if test="firstCommentId != null">
        first_comment_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="lastUpdateBy != null">
        last_update_by,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="toCommentId != null">
        #{toCommentId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="blogId != null">
        #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BOOLEAN},
      </if>
      <if test="firstCommentId != null">
        #{firstCommentId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateBy != null">
        #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="toCommentId != null">
        to_comment_id = #{toCommentId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="blogId != null">
        blog_id = #{blogId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="source != null">
        `source` = #{source,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `TYPE` = #{type,jdbcType=BOOLEAN},
      </if>
      <if test="firstCommentId != null">
        first_comment_id = #{firstCommentId,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateBy != null">
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="selectCommentList" resultMap="BaseResultMap">
    select bl_comment.*, bb.title as blogName, users.nick_name as userName,
      us.nick_name as toUserName from bl_comment
    left join bl_blog bb on bl_comment.blog_id = bb.id
    left join sys_user users on bl_comment.user_id = users.id
    left join sys_user us on bl_comment.to_user_id = us.id
    ${ew.customSqlSegment}
  </select>
</mapper>